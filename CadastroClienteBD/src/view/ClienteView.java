/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package view;

import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import model.Cliente;
import services.ClienteServices;
import services.ServicesFactory;

/**
 *
 * @author Professor
 */
public class ClienteView extends javax.swing.JFrame {

    private int codigoSelecionado = 0;
    
    /**
     * Creates new form ClienteView
     */
    public ClienteView() {
        initComponents();
        
        adicionarEventoSelecao();
        atualizarTabela();
    } // fecha método
    
    private void adicionarEventoSelecao() {
        
        tblClientes.getSelectionModel()
                .addListSelectionListener(
        new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                // Pega o índice da linha selecionada
                int linhaSelecionada
                        = tblClientes.getSelectedRow();
                
                // Se não há linha selecionada
                if (linhaSelecionada < 0) {
                    txtNome.setText("");
                    txtCidade.setText("");
                    btnAtualizar.setEnabled(false);
                }
                else {
                    int codigo;
                    String nome, cidade;
                    
                    // Pega a primeira coluna da linha selecionada
                    codigo = (int)
                    tblClientes.getModel()
                               .getValueAt(
                                    linhaSelecionada,
                                    0);
                    // Pega a segunda coluna da linha selecionada
                    nome = (String)
                    tblClientes.getModel()
                               .getValueAt(
                                    linhaSelecionada,
                                    1);
                    // Pega a terceira coluna da linha selecionada
                    cidade = (String)
                    tblClientes.getModel()
                               .getValueAt(
                                    linhaSelecionada,
                                    2);
                    
                    txtNome.setText(nome);
                    txtCidade.setText(cidade);
                    btnAtualizar.setEnabled(true);
                    codigoSelecionado = codigo;
                }
                
            } // fecha método
        });
        
    } // fecha método
    
    private void atualizarTabela() {
        ClienteServices clienteServices =
                ServicesFactory.getClienteServices();
        
        try {
            ArrayList<Cliente> clientes = 
                    clienteServices.consultarClientes();
            
            DefaultTableModel dtm = 
                    (DefaultTableModel)
                    tblClientes.getModel();
            
            while (dtm.getRowCount() > 0) {
                dtm.removeRow(0);
            } // fecha while
            
            for (int i = 0; i < clientes.size(); i++) {
                Cliente c = clientes.get(i);
                
                dtm.addRow(new Object[] {
                    c.getCodigo(),
                    c.getNome(),
                    c.getCidade()
                });
            } // fecha for
            
            tblClientes.setModel(dtm);
        }
        catch (SQLException e) {
            JOptionPane.showMessageDialog(
                null,
                e.getMessage()
            );
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtCidade = new javax.swing.JTextField();
        btnInserir = new javax.swing.JButton();
        btnAtualizar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblClientes = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cadastro Cliente");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Cadastro"));

        jLabel1.setText("Nome:");

        jLabel2.setText("Cidade:");

        btnInserir.setText("Inserir");
        btnInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInserirActionPerformed(evt);
            }
        });

        btnAtualizar.setText("Atualizar");
        btnAtualizar.setEnabled(false);
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNome)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(0, 269, Short.MAX_VALUE))
                    .addComponent(txtCidade)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnInserir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAtualizar)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInserir)
                    .addComponent(btnAtualizar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "Cidade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblClientes);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInserirActionPerformed
        // Criando novo objeto Cliente
        Cliente c = new Cliente();
        
        // Atualizar as propriedades do objeto
        // com os valores dos campos
        c.setNome(txtNome.getText());
        c.setCidade(txtCidade.getText());
        
        // Chamar a classe de serviço para inserir
        ClienteServices clienteServices =
                ServicesFactory.getClienteServices();
        
        try {
            // Chama o método inserir da service
            clienteServices.inserirCliente(c);
            
            // Mostra mensagem de sucesso
            JOptionPane
                    .showMessageDialog(
                            null,
                            "Cliente inserido.");
            
            atualizarTabela();
        }
        catch (SQLException e) {
            JOptionPane
                    .showMessageDialog(
                            null,
                            "Ocorreu um erro." + e.getMessage());
        }
    }//GEN-LAST:event_btnInserirActionPerformed

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        // Pega os valores dos campos
        String nome = txtNome.getText();
        String cidade = txtCidade.getText();
        
        // Cria um objeto cliente
        Cliente c = new Cliente();
        
        // Atualiza o cliente criado com os valores
        c.setNome(nome);
        c.setCidade(cidade);
        
        // Atualiza o código do cliente
        c.setCodigo(codigoSelecionado);
        
        ClienteServices clienteServices =
                ServicesFactory.getClienteServices();
        
        try {
            clienteServices.atualizarCliente(c);
            
            JOptionPane.showMessageDialog(
                    null,
                    "Cliente atualizado.");
            
            atualizarTabela();
        }
        catch (SQLException e) {
            JOptionPane.showMessageDialog(
                    null, 
                    "Erro: " + e.getMessage());
        }
    }//GEN-LAST:event_btnAtualizarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnInserir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblClientes;
    private javax.swing.JTextField txtCidade;
    private javax.swing.JTextField txtNome;
    // End of variables declaration//GEN-END:variables
}
